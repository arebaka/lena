const db = require("../db");

const triggerTypeEmojis = {
    text:      "üìÉ",
    animation: "üìπ",
    audio:     "üéß",
    dice:      "üé≤",
    document:  "üè∑Ô∏è",
    game:      "üéÆ",
    invoice:   "üí≥",
    location:  "üåê",
    photo:     "üñºÔ∏è",
    poll:      "üìä",
    quiz:      "üçÄ",
    sticker:   "üòΩ",
    video:     "üé¨",
    videonote: "üé•",
    voice:     "üé§"
};

module.exports = async ctx => {
    if (ctx.chat.type == "private")
        return ctx.replyWithMarkdown("–ö–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –≤ –≥—Ä—É–ø–ø–∞—Ö!");
    if (!ctx.from.isAdmin)
        return ctx.replyWithMarkdown("–ö–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∞–º!");

    const triggers = await db.getChatTriggers(ctx.chat.id);
    let   lines = [];
    let   line;
    let   factor;

    for (let trigger of triggers) {
        line = `${trigger.index} ${triggerTypeEmojis[trigger.type]} : `;

        if (trigger.action) {
            switch (trigger.factor) {
            case "join":
                factor = "_–∑–∞—Ö–æ–¥ –≤ —á–∞—Ç_";
            break;
            case "left":
                factor = "_–≤—ã—Ö–æ–¥ –∏–∑ —á–∞—Ç–∞_";
            break;
            default:
                factor = "_–¥–µ–π—Å—Ç–≤–∏–µ_";
            break;
            }
        }
        else {
            factor = trigger.factor.length > 10
                ? trigger.factor.substring(0, 10) + "..."
                : trigger.factor;

            if (trigger.full_factor) {
                factor = `"${factor}"`;
            }
        }

        line += factor;
        lines.push(line);
    }

    ctx.replyWithMarkdown(lines.length
        ? lines.join('\n')
        : "–í —ç—Ç–æ–º —á–∞—Ç–µ –Ω–µ –∑–∞–¥–∞–Ω–æ –Ω–∏ –æ–¥–Ω–æ–≥–æ —Ç—Ä–∏–≥–≥–µ—Ä–∞!"
    );
};
